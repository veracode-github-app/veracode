name: Veracode IaC/Secrets Scanning

run-name: Veracode IaC/Secrets Scanning - ${{ github.event.client_payload.repository.name }}

concurrency:
  group: ${{ github.event.client_payload.event_type }}-${{ github.event.client_payload.repository.name }}-${{ github.event.client_payload.branch }}
  cancel-in-progress: true

on:
  repository_dispatch:
    types: [veracode-iac-secrets-scan]
    
jobs:
  create-checks-run:
    name: Create Checks Run
    runs-on: ubuntu-latest
    steps:
    - uses: veracode/veracode-checks-action@main
      name: Create Checks Run
      id: create_checks_run
      with:
        token: ${{ github.event.client_payload.token }}
        repo: ${{ github.event.client_payload.repository.full_name }}
        sha: ${{ github.event.client_payload.sha }}
        name: "Veracode IaC/Secrets Scanning"
        status: 'in_progress'
        details_url: "https://github.com/${{ github.event.client_payload.repository.owner }}/veracode/actions/runs/${{ github.run_id }}"
    - name: Create metadata
      id: create_metadata_json
      run: |
        echo '{
          "check_run_type": "${{ github.event.client_payload.event_type }}",
          "repository_name": "${{ github.event.client_payload.repository.name }}",
          "check_run_id": ${{ steps.create_checks_run.outputs.check_id }},
          "sha": "${{ github.event.client_payload.sha }}"
        }' > workflow-metadata.json
    - name: Save metadata
      uses: actions/upload-artifact@v3
      with:
        name: workflow-metadata
        path: workflow-metadata.json
       
  veracode-iac-secrets-scan:
    needs: [create-checks-run]
    runs-on: ubuntu-latest
    name: Veracode IaC/Secrets Scanning

    steps:
      - uses: actions/checkout@v3
        with:
          repository: ${{ github.event.client_payload.repository.full_name }}
          ref: ${{ github.event.client_payload.sha }}
          token: ${{ github.event.client_payload.token }}
      - name: Run Veracode IaC/Secrets Scanning
        uses: veracode/container_iac_secrets_scanning@v1.0.0
        with:
            vid: ${{ secrets.API_ID }}
            vkey: ${{ secrets.API_KEY }}
            command: "scan" 
            type: "directory"
            source: "./"
            format: "json"
            debug: false
            fail_build: true
